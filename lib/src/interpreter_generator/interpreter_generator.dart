part of string_matching.interpreter_generator;

class InterpreterGenerator extends TemplateGenerator {
  static const int LOOKAHEAD_CHAR_COUNT = 0;

  static const String _TEMPLATE = 'TEMPLATE';

  static final String _template = '''
// This code was generated by a tool.
// Processing tool available at https://github.com/mezoni/peg

{{#GLOBALS}}
{{#PARSER}}
''';

  final bool memoize;

  final String name;

  InterpreterClassGenerator _interpreterClassGenerator;

  List<String> _topLevelCode;

  InterpreterGenerator(this.name, List<Interpreter> interpreters, {List<String> classLevelCode, this.memoize: false, List<String> topLevelCode}) {
    if (name == null) {
      throw new ArgumentError('name: $name');
    }

    if (interpreters == null) {
      throw new ArgumentError('interpreters: $interpreters');
    }

    if (memoize == null) {
      throw new ArgumentError('memoize: $memoize');
    }

    addTemplate(_TEMPLATE, _template);
    _interpreterClassGenerator = new InterpreterClassGenerator(name, interpreters, classLevelCode: classLevelCode, memoize: memoize);
    _topLevelCode = topLevelCode;
  }

  InterpreterClassGenerator get interpreterClassGenerator {
    return _interpreterClassGenerator;
  }

  List<String> generate() {
    var block = getTemplateBlock(_TEMPLATE);
    if(_topLevelCode != null) {
      block.assign('#GLOBALS', _topLevelCode);
    }

    block.assign('#PARSER', _interpreterClassGenerator.generate());
    return block.process();
  }
}
